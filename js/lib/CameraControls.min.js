CameraControls=function(camera,domElement){domElement.requestPointerLock=domElement.requestPointerLock||domElement.mozRequestPointerLock,document.exitPointerLock=document.exitPointerLock||document.mozExitPointerLock;var onPointerLockChange=e=>this.isLocked=document.pointerLockElement===domElement,onMouseUp=e=>{document.exitPointerLock(),this.button=-1,this.keys=[]},onMouseDown=e=>{domElement.requestPointerLock(),this.button=e.button,e.preventDefault()},onMouseMove=e=>{if(!1!==this.isLocked){var movementX=event.movementX||event.mozMovementX||event.webkitMovementX||0,movementY=event.movementY||event.mozMovementY||event.webkitMovementY||0;if(DEBUG)switch(this.button){case 0:camera.rotateY(-movementX*this.lookSpeed),camera.rotateX(-movementY*this.lookSpeed),camera.rotation.z=0;break;case 2:camera.translateX(movementX*this.moveSpeed),camera.position.y-=movementY*this.moveSpeed;break;case 1:camera.translateZ(movementY*this.moveSpeed)}else camera.rotateY(-movementX*this.lookSpeed),camera.rotateX(-movementY*this.lookSpeed),camera.rotation.z=0}},onKeyUp=e=>this.keys[e.key.toLowerCase()]=!1,onKeyDown=e=>this.keys[e.key.toLowerCase()]=!0;this.update=(()=>{if(!1!==this.isLocked&&DEBUG){var multiplier=5;this.keys.shift&&(multiplier*=4),this.keys.w&&camera.translateZ(-multiplier*this.moveSpeed),this.keys.s&&camera.translateZ(multiplier*this.moveSpeed),this.keys.a&&camera.translateX(-multiplier*this.moveSpeed),this.keys.d&&camera.translateX(multiplier*this.moveSpeed),this.keys.e&&(camera.position.y-=multiplier*this.moveSpeed),this.keys.q&&(camera.position.y+=multiplier*this.moveSpeed),this.save()}}),this.disconnect=(()=>{domElement.removeEventListener("mousedown",onMouseDown,!1),document.removeEventListener("mousemove",onMouseMove,!1),document.removeEventListener("mouseup",onMouseUp,!1),document.removeEventListener("keydown",onKeyDown,!1),document.removeEventListener("keyup",onKeyUp,!1),document.removeEventListener("pointerlockchange",onPointerLockChange,!1),document.removeEventListener("mozpointerlockchange",onPointerLockChange,!1)}),this.dispose=(()=>this.disconnect()),domElement.addEventListener("mousedown",onMouseDown,!1),document.addEventListener("mousemove",onMouseMove,!1),document.addEventListener("mouseup",onMouseUp,!1),document.addEventListener("keydown",onKeyDown,!1),document.addEventListener("keyup",onKeyUp,!1),document.addEventListener("pointerlockchange",onPointerLockChange,!1),document.addEventListener("mozpointerlockchange",onPointerLockChange,!1),this.load=(()=>{if(!DEBUG)return!1;var result=document.cookie.match(new RegExp("cam=([^;]+)"));return!!result&&(result=JSON.parse(result[1]),camera.position.set(...result.p),camera.rotation.set(...result.r,0),this.lookSpeed=result.l||.002,this.moveSpeed=result.m||.1,!0)}),this.save=(()=>{document.cookie=["cam=",JSON.stringify({p:[camera.position.x,camera.position.y,camera.position.z],r:[camera.rotation.x,camera.rotation.y],l:this.lookSpeed,m:this.moveSpeed})].join("")}),this.reset=(()=>{document.cookie="cam=;",this.changeView(model.config.seats[model.config.seats.default])}),this.getPos=(()=>camera.position),this.changeView=((sector,row,col)=>{if(Array.isArray(sector))camera.position.set(...sector),camera.lookAt(0,0,0);else if(sector.hasOwnProperty("position")||sector.hasOwnProperty("rotation"))sector.hasOwnProperty("position")&&camera.position.set(...sector.position),sector.hasOwnProperty("rotation")&&camera.rotation.set(...sector.rotation,0);else{var config=model.config.seats[sector];if(row=row||0,col=col-1||0,config.hasOwnProperty("rows"))for(i=0;i<config.max;i++){if(row<=config.rows[i].max.rows){config=config.rows[i];break}row-=config.rows[i].max.rows}if(row-=1,config.hasOwnProperty("origin")||config.hasOwnProperty("position")){var position=config.position||config.origin;config.hasOwnProperty("max")&&config.hasOwnProperty("offset")?(col=col.clamp(0,config.max.cols-1),row=row.clamp(0,config.max.rows-1),camera.rotation.set(0,0,0),config.hasOwnProperty("rotation")&&camera.rotation.set(config.rotation[1],config.rotation[0],0),camera.position.set(...position),model.config.hasOwnProperty("camera_offset")&&camera.position.translateOnAxis(new THREE.Vector3D(...model.config.camera_offset),1),camera.translateX(config.offset[0]*col),camera.translateY(config.offset[1]*row),camera.translateZ(config.offset[2]*row),camera.lookAt(0,0,0)):camera.position.set(...position)}}}),this.isLocked=!1,this.button=-1,this.keys=[],this.moveSpeed=.1,this.lookSpeed=.002,camera.rotation.set(0,0,0),camera.rotation.order="YXZ"},CameraControls.prototype=Object.create(THREE.EventDispatcher.prototype),CameraControls.prototype.constructor=CameraControls;